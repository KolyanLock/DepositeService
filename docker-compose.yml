name: user-deposit-stack

services:
  postgres:
    image: postgres:17-alpine
    container_name: user-deposit-pg
    environment:
      POSTGRES_DB: user_deposite_db
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER}" ]
      start_period: 10s
      timeout: 5s
      retries: 5
      interval: 10s
    restart: unless-stopped

  elasticsearch:
    image: elastic/elasticsearch:7.17.10
    container_name: user-deposit-es
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ES_PASSWORD}
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - es-data:/usr/share/elasticsearch/data
    healthcheck:
      test: [ "CMD-SHELL", "[ $$(curl -s -o /dev/null -w '%{http_code}' -u elastic:$${ELASTIC_PASSWORD} http://localhost:9200) = 200 ]" ]
      start_period: 30s
      timeout: 5s
      retries: 5
      interval: 10s
    restart: unless-stopped

  user-deposit-app:
    image: user-deposit-service:${VERSION}
    build:
      context: .
      dockerfile: Dockerfile
    container_name: user-deposit-app
    depends_on:
      postgres:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    environment:
      # Spring Datasource
      DB_URL: ${DB_URL}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      # Elasticsearch
      ES_URIS: ${ES_URIS}
      ES_PASSWORD: ${ES_PASSWORD}
      # JWT
      JWT_SECRET: ${JWT_SECRET}
    ports:
      - "8080:8080"
    restart: unless-stopped

volumes:
  pg-data:
  es-data:
